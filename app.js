// –ì–ª–æ–±–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏ —Å—Å—ã–ª–∫–∏ –Ω–∞ —ç–ª–µ–º–µ–Ω—Ç—ã UI
const S={reviews:[],textEl:document.getElementById("text"),err:document.getElementById("err"),spin:document.getElementById("spin"),btnRandom:document.getElementById("btnRandom"),btnSent:document.getElementById("btnSent"),btnNouns:document.getElementById("btnNouns"),token:document.getElementById("token"),sent:document.getElementById("sent"),nouns:document.getElementById("nouns")};

// –ü–æ–∫–∞–∑/—Å–∫—Ä—ã—Ç–∏–µ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –∫–Ω–æ–ø–æ–∫
function setSpin(v){S.spin.style.display=v?"inline-flex":"none";S.btnRandom.disabled=v;S.btnSent.disabled=v;S.btnNouns.disabled=v}

// –ü–æ–∫–∞–∑/—Å–∫—Ä—ã—Ç–∏–µ –±–ª–æ–∫–∞ –æ—à–∏–±–æ–∫
function setErr(t){if(!t){S.err.style.display="none";S.err.textContent="";return}S.err.style.display="block";S.err.textContent=t}

// –°–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–π –º–µ—Ç–∫–∏ —Å–µ–Ω—Ç–∏–º–µ–Ω—Ç–∞ —Å –∏–∫–æ–Ω–∫–æ–π –∏ —Å—Ç–∏–ª–µ–º
function mapSentIcon(lbl){if(lbl==="positive")return["üëç","good","fa-regular fa-face-smile"];if(lbl==="negative")return["üëé","bad","fa-regular fa-face-frown"];if(lbl==="neutral")return["‚ùì","warn","fa-regular fa-face-meh"];return["‚ùì","warn","fa-regular fa-face-meh"]}

// –°–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ —É—Ä–æ–≤–Ω—è —Å—É—â–µ—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã—Ö —Å –∏–∫–æ–Ω–∫–æ–π –∏ —Å—Ç–∏–ª–µ–º
function mapNounIcon(lbl){if(lbl==="high"||lbl==="many")return["üü¢","good"];if(lbl==="medium")return["üü°","warn"];if(lbl==="low"||lbl==="few")return["üî¥","bad"];return["‚Äî","warn"]}

// –í–∑—è—Ç—å –ø–µ—Ä–≤—É—é —Å—Ç—Ä–æ–∫—É –æ—Ç–≤–µ—Ç–∞ –∏ –ø—Ä–∏–≤–µ—Å—Ç–∏ –∫ –Ω–∏–∂–Ω–µ–º—É —Ä–µ–≥–∏—Å—Ç—Ä—É
function firstLineLower(t){return (t||"").split(/\r?\n/)[0].toLowerCase().trim()}

// –ù–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è –æ—Ç–≤–µ—Ç–∞ –º–æ–¥–µ–ª–∏ –ø–æ —Å–µ–Ω—Ç–∏–º–µ–Ω—Ç—É –∫ one-of: positive/negative/neutral
function normalizeResp(raw){let s=firstLineLower(raw).replace(/^[^a-z–∞-—è—ë]+/i,"");if(/positive|positif|–ø–æ–ª–æ–∂–∏—Ç|—Ö–æ—Ä–æ—à|good/.test(s))return"positive";if(/negative|negatif|–æ—Ç—Ä–∏—Ü–∞—Ç|–ø–ª–æ—Ö|bad/.test(s))return"negative";if(/neutral|–Ω–µ–π—Ç—Ä/.test(s))return"neutral";return s}

// –ù–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è –æ—Ç–≤–µ—Ç–∞ –ø–æ —É—Ä–æ–≤–Ω—é —Å—É—â–µ—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã—Ö –∫ one-of: high/medium/low
function normalizeLevel(raw){let s=firstLineLower(raw);if(/\b(high|many|>?\s*15|\bmore than 15\b|–±–æ–ª–µ–µ\s*15|–º–Ω–æ–≥–æ)\b/.test(s))return"high";if(/\b(medium|6-15|6 to 15|—Å—Ä–µ–¥–Ω|–æ—Ç\s*6\s*–¥–æ\s*15)\b/.test(s))return"medium";if(/\b(low|few|<\s*6|–º–∞–ª–æ|–º–µ–Ω–µ–µ\s*6)\b/.test(s))return"low";return s}

// –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –≤—ã–∑–æ–≤ API Hugging Face Falcon-7B-Instruct (text-generation)
async function callApi(prompt,text){
  const url="https://api-inference.huggingface.co/models/tiiuae/falcon-7b-instruct";
  const h={"Content-Type":"application/json"};
  const tok=S.token.value.trim();
  if(tok)h.Authorization="Bearer "+tok; // –î–æ–±–∞–≤–ª—è–µ–º Bearer, –µ—Å–ª–∏ —Ç–æ–∫–µ–Ω –≤–≤–µ–¥—ë–Ω
  const body={inputs:prompt+text};
  const r=await fetch(url,{method:"POST",headers:h,body:JSON.stringify(body)});
  if(r.status===402)throw new Error("Payment required or model unavailable (402). Provide a valid Hugging Face token.");
  if(r.status===429)throw new Error("Rate limited (429). Please slow down and try again.");
  if(!r.ok){let e=await r.text();throw new Error("API error "+r.status+": "+e.slice(0,200))}
  let data=await r.json();
  // –ò–∑–≤–ª–µ–∫–∞–µ–º —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç –∏–∑ —Ç–∏–ø–∏—á–Ω—ã—Ö —Ñ–æ—Ä–º–∞—Ç–æ–≤ –æ—Ç–≤–µ—Ç–∞
  if(Array.isArray(data)&&data.length&&data[0].generated_text)return data[0].generated_text;
  if(data&&data.generated_text)return data.generated_text;
  if(typeof data==="string")return data;
  return JSON.stringify(data)
}

// –í—ã–±–æ—Ä —Å–ª—É—á–∞–π–Ω–æ–≥–æ –æ—Ç–∑—ã–≤–∞ –∏ —Å–±—Ä–æ—Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
function rand(){
  if(!S.reviews.length)return;
  const i=Math.floor(Math.random()*S.reviews.length);
  S.textEl.textContent=S.reviews[i].text||"";
  S.sent.querySelector("span").textContent="Sentiment: ‚Äî";
  S.sent.className="pill";
  S.sent.querySelector("i").className="fa-regular fa-face-meh";
  S.nouns.querySelector("span").textContent="Noun level: ‚Äî";
  S.nouns.className="pill";
  setErr("")
}

// –£–¥–∞–ª–µ–Ω–∏–µ URL, email –∏ @—É–ø–æ–º–∏–Ω–∞–Ω–∏–π
function stripNoise(t){return (t||"").replace(/https?:\/\/\S+/g," ").replace(/\b[\w.-]+@[\w.-]+\.\w+\b/g," ").replace(/(^| )@\w+/g," ").replace(/[^\S\r\n]+/g," ").trim()}

// –¢–æ–∫–µ–Ω–∏–∑–∞—Ü–∏—è: —Å–ª–æ–≤–∞ –∏ —ç–º–æ–¥–∑–∏ (Unicode)
function toTokens(t){const x=stripNoise(t).toLowerCase();const m=x.match(/([\p{L}\p{M}]+|[\p{Emoji_Presentation}\p{Emoji}\u2600-\u27BF])/gu)||[];return m}

// –ü—Ä–æ—Å—Ç–µ–π—à–∞—è –ª–µ–º–º–∞—Ç–∏–∑–∞—Ü–∏—è en/ru —á–µ—Ä–µ–∑ —É—Å–µ—á–µ–Ω–∏–µ –æ–∫–æ–Ω—á–∞–Ω–∏–π
function lemma(tok){
  if(!tok)return tok;
  let t=tok.toLowerCase();
  t=t.replace(/'s$/,"");
  t=t.replace(/(ing|ed|ers|er|ies|s)$/,"");
  t=t.replace(/(–∞–º–∏|—è–º–∏|–∞–º–∏|–æ–≤|–µ–≤|–µ–≤|–æ–º|–µ–º|–∞–º|—è–º|–∞—Ö|—è—Ö|—É—é|—é—é|–æ–µ|–µ–µ|–∞—è|—è—è|–∏–π|—ã–π|–æ–π|—ã–µ|–∏–µ|–æ–≥–æ|–µ–≥–æ|–µ–º—É|–æ–º—É|–∏–º–∏|—ã–º–∏|–æ–≥–æ|–µ–≥–æ|—É—é|—é—é|—è—è|–∞—è|–æ–≤|–µ–≤|–µ–π|—å–∏|—å—é|—å—é|—è–º|—è—Ö|–∞–º|–∞—Ö| tion|ment)$/,"");
  return t
}

// –ú–∏–Ω–∏-–ª–µ–∫—Å–∏–∫–æ–Ω –±–∞–∑–æ–≤—ã—Ö –≤–µ—Å–æ–≤ –¥–ª—è —Å–µ–Ω—Ç–∏–º–µ–Ω—Ç–∞
const POS_LEX={pos:new Set(["good","great","excellent","love","like","wonderful","refreshing","delicious","easy","better","best","recommend","loved","amazing","perfect","—É–¥–æ–±–Ω","—Ö–æ—Ä–æ—à","–æ—Ç–ª–∏—á–Ω","–ª—é–±–ª","–Ω—Ä–∞–≤","–ø—Ä–µ–∫—Ä–∞—Å–Ω","–∫–ª–∞—Å—Å–Ω","—Å—É–ø–µ—Ä","—Ä–µ–∫–æ–º–µ–Ω–¥"]),neg:new Set(["bad","worse","worst","awful","terrible","greasy","gross","harsh","notgood","hate","dislike","problem","issues","poor","tastes","smells","–ø–ª–æ—Ö","—Ö—É–∂–µ","—É–∂–∞—Å–Ω","–º–µ—Ä–∑–∫","–∂–∏—Ä–Ω","–ø—Ä–æ–±–ª–µ–º","–Ω–µ–ø—Ä–∏—è—Ç–Ω","–ø–ª–æ—Ö–æ–π","–æ—Ç–≤—Ä–∞—Ç"])};

// –°–ø–∏—Å–∫–∏ –º–æ–¥–∏—Ñ–∏–∫–∞—Ç–æ—Ä–æ–≤/–Ω–µ–≥–∞—Ç–æ—Ä–æ–≤
const NEGATORS=new Set(["–Ω–µ","–Ω–µ—Ç","no","not","never"]);
const BOOST=new Set(["very","–æ—á–µ–Ω—å"]);
const MITI=new Set(["slightly","–Ω–µ–º–Ω–æ–≥–æ","—á—É—Ç—å"]);

// –õ–æ–∫–∞–ª—å–Ω–∞—è –æ—Ü–µ–Ω–∫–∞ —Ç–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ –ø–æ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º (–Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è, –∏–Ω–≤–µ—Ä—Å–∏—è, –º–æ–¥–∏—Ñ–∏–∫–∞—Ç–æ—Ä—ã, –≤–æ—Å–∫–ª–∏—Ü–∞–Ω–∏—è)
function sentimentLocal(t){
  const toks=toTokens(t).map(lemma);
  let score=0,count=0;
  let ex=(t.match(/!/g)||[]).length;
  let exMul=1+0.1*Math.min(3,ex); // –£—Å–∏–ª–µ–Ω–∏–µ –∑–∞ "!"
  for(let i=0;i<toks.length;i++){
    let w=0;let tk=toks[i];
    if(POS_LEX.pos.has(tk))w=1;else if(POS_LEX.neg.has(tk))w=-1;else w=0;
    if(w!==0){
      // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–µ–≥–∞—Ç–æ—Ä–∞ –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö 3 —Ç–æ–∫–µ–Ω–æ–≤ –Ω–∞–∑–∞–¥ –¥–æ –ø—É–Ω–∫—Ç—É–∞—Ü–∏–∏
      let j=i-1;let inv=false;let mul=1;
      for(let k=1;k<=3&&j>=0;k++,j--){
        let p=toks[j];
        if(NEGATORS.has(p)){inv=true;break}
        if(/[.,;:!?]/.test(p))break
      }
      // –ò–Ω—Ç–µ–Ω—Å–∏—Ñ–∏–∫–∞—Ç–æ—Ä/—Å–º—è–≥—á–∏—Ç–µ–ª—å —Å—Ä–∞–∑—É –ø–µ—Ä–µ–¥ —Å–ª–æ–≤–æ–º
      if(toks[i-1]&&BOOST.has(toks[i-1]))mul*=1.5;
      if(toks[i-1]&&MITI.has(toks[i-1]))mul*=0.6;
      if(inv)w*=-1;
      w*=mul;
      w*=exMul;
      score+=w;count++
    }
  }
  // –ù–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è –∏ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ
  let denom=Math.max(1,Math.sqrt(count));
  let s=score/denom;
  s=Math.max(-4,Math.min(4,s));
  let icon=s>=0?"üëç":"üëé";
  let conf=Math.min(1,Math.abs(s)/2);
  return{icon,confidence:conf}
}

// –ó–∞–≥—Ä—É–∑–∫–∞ TSV —á–µ—Ä–µ–∑ Papa Parse ‚Üí –º–∞—Å—Å–∏–≤ –æ—Ç–∑—ã–≤–æ–≤
async function loadTSV(){
  return new Promise((res,rej)=>{
    Papa.parse("./reviews_test.tsv",{download:true,delimiter:"\t",header:true,complete:r=>{const rows=(r.data||[]).filter(x=>x&&x.text);res(rows)},error:e=>rej(e)})
  })
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "Analyze Sentiment": –≤—ã–∑–æ–≤ API + –ª–æ–∫–∞–ª—å–Ω–∞—è –º–µ—Ç–∫–∞/—É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å
async function onSent(){
  const txt=S.textEl.textContent.trim();
  if(!txt){setErr("Select a review first.");return}
  setErr("");
  setSpin(true);
  try{
    const out=await callApi("Classify this review as positive, negative, or neutral: ",txt);
