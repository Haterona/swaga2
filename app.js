const S={reviews:[],textEl:document.getElementById("text"),err:document.getElementById("err"),spin:document.getElementById("spin"),btnRandom:document.getElementById("btnRandom"),btnSent:document.getElementById("btnSent"),btnNouns:document.getElementById("btnNouns"),token:document.getElementById("token"),sent:document.getElementById("sent"),nouns:document.getElementById("nouns")};
function setSpin(v){S.spin.style.display=v?"inline-flex":"none";S.btnRandom.disabled=v;S.btnSent.disabled=v;S.btnNouns.disabled=v}
function setErr(t){if(!t){S.err.style.display="none";S.err.textContent="";return}S.err.style.display="block";S.err.textContent=t}
function mapSentIcon(lbl){if(lbl==="positive")return["üëç","good","fa-regular fa-face-smile"];if(lbl==="negative")return["üëé","bad","fa-regular fa-face-frown"];if(lbl==="neutral")return["‚ùì","warn","fa-regular fa-face-meh"];return["‚ùì","warn","fa-regular fa-face-meh"]}
function mapNounIcon(lbl){if(lbl==="high"||lbl==="many")return["üü¢","good"];if(lbl==="medium")return["üü°","warn"];if(lbl==="low"||lbl==="few")return["üî¥","bad"];return["‚Äî","warn"]}
function firstLineLower(t){return (t||"").split(/\r?\n/)[0].toLowerCase().trim()}
function normalizeResp(raw){let s=firstLineLower(raw).replace(/^[^a-z–∞-—è—ë]+/i,"");if(/positive|positif|–ø–æ–ª–æ–∂–∏—Ç|—Ö–æ—Ä–æ—à|good/.test(s))return"positive";if(/negative|negatif|–æ—Ç—Ä–∏—Ü–∞—Ç|–ø–ª–æ—Ö|bad/.test(s))return"negative";if(/neutral|–Ω–µ–π—Ç—Ä/.test(s))return"neutral";return s}
function normalizeLevel(raw){let s=firstLineLower(raw);if(/\b(high|many|>?\s*15|\bmore than 15\b|–±–æ–ª–µ–µ\s*15|–º–Ω–æ–≥–æ)\b/.test(s))return"high";if(/\b(medium|6-15|6 to 15|—Å—Ä–µ–¥–Ω|–æ—Ç\s*6\s*–¥–æ\s*15)\b/.test(s))return"medium";if(/\b(low|few|<\s*6|–º–∞–ª–æ|–º–µ–Ω–µ–µ\s*6)\b/.test(s))return"low";return s}
async function callApi(prompt,text){const url="https://api-inference.huggingface.co/models/tiiuae/falcon-7b-instruct";const h={"Content-Type":"application/json"};const tok=S.token.value.trim();if(tok)h.Authorization="Bearer "+tok;const body={inputs:prompt+text};const r=await fetch(url,{method:"POST",headers:h,body:JSON.stringify(body)});if(r.status===402)throw new Error("Payment required or model unavailable (402). Provide a valid Hugging Face token.");if(r.status===429)throw new Error("Rate limited (429). Please slow down and try again.");if(!r.ok){let e=await r.text();throw new Error("API error "+r.status+": "+e.slice(0,200))}let data=await r.json();if(Array.isArray(data)&&data.length&&data[0].generated_text)return data[0].generated_text;if(data&&data.generated_text)return data.generated_text;if(typeof data==="string")return data;return JSON.stringify(data)}
function rand(){if(!S.reviews.length)return;const i=Math.floor(Math.random()*S.reviews.length);S.textEl.textContent=S.reviews[i].text||"";S.sent.querySelector("span").textContent="Sentiment: ‚Äî";S.sent.className="pill";S.sent.querySelector("i").className="fa-regular fa-face-meh";S.nouns.querySelector("span").textContent="Noun level: ‚Äî";S.nouns.className="pill";setErr("")}
function stripNoise(t){return (t||"").replace(/https?:\/\/\S+/g," ").replace(/\b[\w.-]+@[\w.-]+\.\w+\b/g," ").replace(/(^| )@\w+/g," ").replace(/[^\S\r\n]+/g," ").trim()}
function toTokens(t){const x=stripNoise(t).toLowerCase();const m=x.match(/([\p{L}\p{M}]+|[\p{Emoji_Presentation}\p{Emoji}\u2600-\u27BF])/gu)||[];return m}
function lemma(tok){if(!tok)return tok;let t=tok.toLowerCase();t=t.replace(/'s$/,"");t=t.replace(/(ing|ed|ers|er|ies|s)$/,"");t=t.replace(/(–∞–º–∏|—è–º–∏|–∞–º–∏|–æ–≤|–µ–≤|–µ–≤|–æ–º|–µ–º|–∞–º|—è–º|–∞—Ö|—è—Ö|—É—é|—é—é|–æ–µ|–µ–µ|–∞—è|—è—è|–∏–π|—ã–π|–æ–π|—ã–µ|–∏–µ|–æ–≥–æ|–µ–≥–æ|–µ–º—É|–æ–º—É|–∏–º–∏|—ã–º–∏|–æ–≥–æ|–µ–≥–æ|—É—é|—é—é|—è—è|–∞—è|–æ–≤|–µ–≤|–µ–π|—å–∏|—å—é|—å—é|—è–º|—è—Ö|–∞–º|–∞—Ö| tion|ment)$/,"");return t}
const POS_LEX={pos:new Set(["good","great","excellent","love","like","wonderful","refreshing","delicious","easy","better","best","recommend","loved","amazing","perfect","—É–¥–æ–±–Ω","—Ö–æ—Ä–æ—à","–æ—Ç–ª–∏—á–Ω","–ª—é–±–ª","–Ω—Ä–∞–≤","–ø—Ä–µ–∫—Ä–∞—Å–Ω","–∫–ª–∞—Å—Å–Ω","—Å—É–ø–µ—Ä","—Ä–µ–∫–æ–º–µ–Ω–¥"]),neg:new Set(["bad","worse","worst","awful","terrible","greasy","gross","harsh","notgood","hate","dislike","problem","issues","poor","tastes","smells","–ø–ª–æ—Ö","—Ö—É–∂–µ","—É–∂–∞—Å–Ω","–º–µ—Ä–∑–∫","–∂–∏—Ä–Ω","–ø—Ä–æ–±–ª–µ–º","–Ω–µ–ø—Ä–∏—è—Ç–Ω","–ø–ª–æ—Ö–æ–π","–æ—Ç–≤—Ä–∞—Ç"])};
const NEGATORS=new Set(["–Ω–µ","–Ω–µ—Ç","no","not","never"]);const BOOST=new Set(["very","–æ—á–µ–Ω—å"]);const MITI=new Set(["slightly","–Ω–µ–º–Ω–æ–≥–æ","—á—É—Ç—å"]);
function sentimentLocal(t){const toks=toTokens(t).map(lemma);let score=0,count=0;let ex=(t.match(/!/g)||[]).length;let exMul=1+0.1*Math.min(3,ex);for(let i=0;i<toks.length;i++){let w=0;let tk=toks[i];if(POS_LEX.pos.has(tk))w=1;else if(POS_LEX.neg.has(tk))w=-1;else w=0;if(w!==0){let j=i-1;let inv=false;let mul=1;for(let k=1;k<=3&&j>=0;k++,j--){let p=toks[j];if(NEGATORS.has(p)){inv=true;break}if(/[.,;:!?]/.test(p))break}if(toks[i-1]&&BOOST.has(toks[i-1]))mul*=1.5;if(toks[i-1]&&MITI.has(toks[i-1]))mul*=0.6;if(inv)w*=-1;w*=mul;w*=exMul;score+=w;count++}}let denom=Math.max(1,Math.sqrt(count));let s=score/denom;s=Math.max(-4,Math.min(4,s));let icon=s>=0?"üëç":"üëé";let conf=Math.min(1,Math.abs(s)/2);return{icon,confidence:conf}}
async function loadTSV(){return new Promise((res,rej)=>{Papa.parse("./reviews_test.tsv",{download:true,delimiter:"\t",header:true,complete:r=>{const rows=(r.data||[]).filter(x=>x&&x.text);res(rows)},error:e=>rej(e)})})}
async function onSent(){const txt=S.textEl.textContent.trim();if(!txt){setErr("Select a review first.");return}setErr("");setSpin(true);try{const out=await callApi("Classify this review as positive, negative, or neutral: ",txt);const lbl=normalizeResp(out);const [ico,cls,face]=mapSentIcon(lbl);const local=sentimentLocal(txt);S.sent.querySelector("span").textContent="Sentiment: "+ico;S.sent.className="pill "+cls;S.sent.querySelector("i").className=face;S.sent.title="local:"+local.icon+" "+Math.round(local.confidence*100)+"%"}catch(e){setErr(e.message)}finally{setSpin(false)}}
async function onNouns(){const txt=S.textEl.textContent.trim();if(!txt){setErr("Select a review first.");return}setErr("");setSpin(true);try{const out=await callApi("Count the nouns in this review and return only High (>15), Medium (6-15), or Low (<6). ",txt);let s=normalizeLevel(out);if(/many|high/.test(s))s="high";else if(/medium/.test(s))s="medium";else if(/few|low/.test(s))s="low";const [ico,cls]=mapNounIcon(s);S.nouns.querySelector("span").textContent="Noun level: "+ico;S.nouns.className="pill "+cls}catch(e){setErr(e.message)}finally{setSpin(false)}}
S.btnRandom.addEventListener("click",rand);S.btnSent.addEventListener("click",onSent);S.btnNouns.addEventListener("click",onNouns);
(async()=>{try{S.reviews=await loadTSV();rand()}catch(e){setErr("Failed to load TSV")}})();
